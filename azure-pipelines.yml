variables:
  temp: /__w/_temp
  
resources:
  # This section defines the containers which are used by the pipeline.
  # The /var/run/usbmuxd file is the socket used by usbmuxd, which is used
  # to communicate to iOS devices.
  # 
  # All containers in the same job share certain paths, such as
  # $(Pipeline.Workspace).
  #
  # This assumes that the developer disk images are available at
  # /home/ubuntu/devimg. You could also deploy the developer disk images
  # via a container, or store them in a Git repository and clone that
  # repository as part of the build.
  containers:
  - container: node
    image: node:14
    options: >-
      --name job-$(Build.BuildId)-node
      -v /var/run/usbmuxd:/var/run/usbmuxd:ro
      -v /usr/bin/docker:/tmp/docker:ro
  - container: appium
    image: quamotion/appium-docker-ios:1.0.1
    options: >-
      --name job-$(Build.BuildId)-appium
      -v /var/run/usbmuxd:/var/run/usbmuxd:ro
      -v /home/ubuntu/devimg:/etc/quamotion/devimg:ro
    command: >-
      appium
      --log ${{ variables.temp }}/appium/appium.log
      --log-level error:debug
    env:
      LICENSE_PATH: ${{ variables.temp }}/quamotion/quamotion.license
      DEVELOPER_PROFILE_PATH: ${{ variables.temp }}/quamotion/quamotion.developerprofile
      DEVELOPER_PROFILE_PASSWORD: quamotion

pool: default

container: node

services:
  appium: appium

steps:
  # These steps download the Quamotion license file and iOS Developer Profile which will be used
  # by the Appium container to install and launch the WebDriverAgent on your iOS device.
  # You'll need to manually upload these files to the Pipelines Library in your Azure project.
- task: DownloadSecureFile@1
  name: license
  inputs:
    secureFile: quamotion.license
  displayName: "Download Quamotion license file"

- task: DownloadSecureFile@1
  name: developerProfile
  inputs:
    secureFile: quamotion.developerprofile
  displayName: "Download iOS Developer Profile"

- script: |
    mkdir -p $(temp)/quamotion
    mv $(license.secureFilePath) $(temp)/quamotion/quamotion.license
    mv $(developerProfile.secureFilePath) $(temp)/quamotion/quamotion.developerprofile
  displayName: "Install Quamotion license file, iOS Developer Profile"

# These steps install and execute the idevice_id utility to print the UDID of all available iOS devices.
# You can this to make sure your iOS devices are connected properly, and are available in your containers.
- script: |
    /tmp/docker exec -t -u 0 job-$(Build.BuildId)-node \
    sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
  displayName: "Install sudo"

- script: |
    sudo apt-get update
    sudo apt-get install -y --no-install-recommends libimobiledevice-utils
  displayName: "Install libimobiledevice-utils"

- script: |
    idevice_id -l
  displayName: "List available iOS devices"

# These steps get information about the Appium server and create a new Appium session.
# They act as a smoke test for the Appium server.
# The apipum server is available at http://appium:4723/; 'appium' is the name of the
# service container and 4723 is the default port.
- script: |
    curl -X GET http://appium:4723/wd/hub/status
  displayName: Get Appium status

- script: |
    curl -X POST -H "Content-Type: application/json" --data "@capabilities.json" http://appium:4723/wd/hub/session
  displayName: Create Appium session

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(temp)/appium/
    artifactName: logs
  displayName: Publish Appium logs
